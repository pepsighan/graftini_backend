// Code generated by qtc from "hello.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// All text outside function templates is treated as comments,
// i.e. it is just ignored by quicktemplate compiler (`qtc`). It is for humans.
//
// Hello is a simple template function.

//line templates/hello.qtpl:5
package templates

//line templates/hello.qtpl:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/hello.qtpl:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/hello.qtpl:5
func StreamHello(qw422016 *qt422016.Writer, name string) {
//line templates/hello.qtpl:5
	qw422016.N().S(`
	Hello, `)
//line templates/hello.qtpl:6
	qw422016.E().S(name)
//line templates/hello.qtpl:6
	qw422016.N().S(`!
`)
//line templates/hello.qtpl:7
}

//line templates/hello.qtpl:7
func WriteHello(qq422016 qtio422016.Writer, name string) {
//line templates/hello.qtpl:7
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/hello.qtpl:7
	StreamHello(qw422016, name)
//line templates/hello.qtpl:7
	qt422016.ReleaseWriter(qw422016)
//line templates/hello.qtpl:7
}

//line templates/hello.qtpl:7
func Hello(name string) string {
//line templates/hello.qtpl:7
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/hello.qtpl:7
	WriteHello(qb422016, name)
//line templates/hello.qtpl:7
	qs422016 := string(qb422016.B)
//line templates/hello.qtpl:7
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/hello.qtpl:7
	return qs422016
//line templates/hello.qtpl:7
}
