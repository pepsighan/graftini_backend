// Code generated by qtc from "pageContent.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/pageContent.qtpl:1
package templates

//line templates/pageContent.qtpl:1
import "github.com/pepsighan/graftini_backend/internal/pkg/ent/schema"

//line templates/pageContent.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/pageContent.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/pageContent.qtpl:4
func StreamPageContent(qw422016 *qt422016.Writer, m *schema.ComponentMap) {
//line templates/pageContent.qtpl:4
	qw422016.N().S(`
return (
  `)
//line templates/pageContent.qtpl:6
	streamsubPageContent(qw422016, "ROOT_NODE_ID", m)
//line templates/pageContent.qtpl:6
	qw422016.N().S(`
);
`)
//line templates/pageContent.qtpl:8
}

//line templates/pageContent.qtpl:8
func WritePageContent(qq422016 qtio422016.Writer, m *schema.ComponentMap) {
//line templates/pageContent.qtpl:8
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/pageContent.qtpl:8
	StreamPageContent(qw422016, m)
//line templates/pageContent.qtpl:8
	qt422016.ReleaseWriter(qw422016)
//line templates/pageContent.qtpl:8
}

//line templates/pageContent.qtpl:8
func PageContent(m *schema.ComponentMap) string {
//line templates/pageContent.qtpl:8
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/pageContent.qtpl:8
	WritePageContent(qb422016, m)
//line templates/pageContent.qtpl:8
	qs422016 := string(qb422016.B)
//line templates/pageContent.qtpl:8
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/pageContent.qtpl:8
	return qs422016
//line templates/pageContent.qtpl:8
}

//line templates/pageContent.qtpl:12
func streamsubPageContent(qw422016 *qt422016.Writer, id string, m *schema.ComponentMap) {
//line templates/pageContent.qtpl:12
	qw422016.N().S(`
  <`)
//line templates/pageContent.qtpl:13
	qw422016.E().V(m[id].Type)
//line templates/pageContent.qtpl:13
	qw422016.N().S(`>
    `)
//line templates/pageContent.qtpl:14
	if m[id].IsCanvas == true {
//line templates/pageContent.qtpl:14
		qw422016.N().S(`
      `)
//line templates/pageContent.qtpl:15
		for childID, _ := range m[id].ChildrenNodes {
//line templates/pageContent.qtpl:15
			qw422016.N().S(`
        `)
//line templates/pageContent.qtpl:16
			streamsubPageContent(qw422016, childID, n)
//line templates/pageContent.qtpl:16
			qw422016.N().S(`
      `)
//line templates/pageContent.qtpl:17
		}
//line templates/pageContent.qtpl:17
		qw422016.N().S(`
    `)
//line templates/pageContent.qtpl:18
	}
//line templates/pageContent.qtpl:18
	qw422016.N().S(`
  </`)
//line templates/pageContent.qtpl:19
	qw422016.E().V(m[id].Type)
//line templates/pageContent.qtpl:19
	qw422016.N().S(`>
`)
//line templates/pageContent.qtpl:20
}

//line templates/pageContent.qtpl:20
func writesubPageContent(qq422016 qtio422016.Writer, id string, m *schema.ComponentMap) {
//line templates/pageContent.qtpl:20
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/pageContent.qtpl:20
	streamsubPageContent(qw422016, id, m)
//line templates/pageContent.qtpl:20
	qt422016.ReleaseWriter(qw422016)
//line templates/pageContent.qtpl:20
}

//line templates/pageContent.qtpl:20
func subPageContent(id string, m *schema.ComponentMap) string {
//line templates/pageContent.qtpl:20
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/pageContent.qtpl:20
	writesubPageContent(qb422016, id, m)
//line templates/pageContent.qtpl:20
	qs422016 := string(qb422016.B)
//line templates/pageContent.qtpl:20
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/pageContent.qtpl:20
	return qs422016
//line templates/pageContent.qtpl:20
}
