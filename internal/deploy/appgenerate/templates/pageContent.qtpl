{% import "github.com/pepsighan/graftini_backend/internal/pkg/ent/schema" %}

{% comment %} Generates the React markup for the page based on the component map. {% endcomment %}
{% func PageContent(m schema.ComponentMap) %}
return (
  {%= rootContent(m) %}
);
{% endfunc %}


{% comment %} The following generates the markup for the root component. {% endcomment %}
{% func rootContent(m schema.ComponentMap) %}
  <>
    {% for _, childID := range m["ROOT"].ChildrenNodes %}
      {%= subPageContent(childID, m) %}
    {% endfor %}
  </>
{% endfunc %}



{% comment %} The following recursively generates the markup for each component node and its children. {% endcomment %}
{% func subPageContent(id string, m schema.ComponentMap) %}
  <{%v m[id].Type %} {%= spreadProps(m[id].Props) %}>
    {% if m[id].IsCanvas == true %}
      {% for _, childID := range m[id].ChildrenNodes %}
        {%= subPageContent(childID, m) %}
      {% endfor %}
    {% endif %}
  </{%v m[id].Type %}>
{% endfunc %}


{% comment %} It spreads the props using attribute assignment. {% endcomment %}
{% func spreadProps(props map[string]interface{}) %}
  {% for k, v := range props %}
    {%s= k %}={{%= stringify(v) %}}
  {% endfor %}
{% endfunc %}