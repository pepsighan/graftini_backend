// Code generated by entc, DO NOT EDIT.

package deployment

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the deployment type in the database.
	Label = "deployment"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVercelDeploymentID holds the string denoting the vercel_deployment_id field in the database.
	FieldVercelDeploymentID = "vercel_deployment_id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldProjectSnapshot holds the string denoting the project_snapshot field in the database.
	FieldProjectSnapshot = "project_snapshot"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeDeploymentsOf holds the string denoting the deployments_of edge name in mutations.
	EdgeDeploymentsOf = "deployments_of"
	// Table holds the table name of the deployment in the database.
	Table = "deployments"
	// DeploymentsOfTable is the table the holds the deployments_of relation/edge.
	DeploymentsOfTable = "deployments"
	// DeploymentsOfInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	DeploymentsOfInverseTable = "projects"
	// DeploymentsOfColumn is the table column denoting the deployments_of relation/edge.
	DeploymentsOfColumn = "project_deployments"
)

// Columns holds all SQL columns for deployment fields.
var Columns = []string{
	FieldID,
	FieldVercelDeploymentID,
	FieldStatus,
	FieldProjectSnapshot,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "deployments"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"project_deployments",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultVercelDeploymentID holds the default value on creation for the "vercel_deployment_id" field.
	DefaultVercelDeploymentID string
	// DefaultProjectSnapshot holds the default value on creation for the "project_snapshot" field.
	DefaultProjectSnapshot string
	// ProjectSnapshotValidator is a validator for the "project_snapshot" field. It is called by the builders before save.
	ProjectSnapshotValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
